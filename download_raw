#!/usr/bin/env python3

import os
import sys
import argparse
from zipfile import ZipFile
import mechanicalsoup
import logging
from colorlog import ColoredFormatter
from io import BytesIO

from lib.config import read_config, get_rdg_credentials

parser = argparse.ArgumentParser(description='Download raw Fares feed zip file from http://data.atoc.org/ to a \'feeds\' subfolder.',
                                 epilog='Tip: Run ./setup to store username and password locally for reuse')
parser.add_argument('-u', '--username', metavar='USERNAME', help='Your data.atoc.org username (will prompt for password)')
parser.add_argument('-v', help='More output including GET/POST progress', action='store_true')
parser.add_argument('-q', '--quiet', help='Suppress normal output', action='store_true')
parser.add_argument('--unzip', help='Also unzip', action='store_true')

def download_fares_feed(username, password, unzip=False):
    log = logging.getLogger('download_fares_feed')
    br = mechanicalsoup.StatefulBrowser(soup_config={'features': 'lxml'})
    log.debug('Downloading rdg fares feed from http://data.atoc.org/')
    br.open('http://data.atoc.org/?q=user')  # or http://data.atoc.org/user/login?current=node/1
    br.select_form('#user-login')
    br['name'] = username
    br['pass'] = password
    br.submit_selected()
    page = br.get_current_page()
    possible_errors = page.select('.error')
    if possible_errors:
        log.error('Login appears unsuccessful:')
        for pe in possible_errors:
            log.error(pe.text.strip())
        sys.exit(1)
    else:
        log.info('Login successful, attempting download')
    br.open('http://data.atoc.org/data-download')
    for l in br.links():
        log.debug('Examining link: %r ' % (l))
        url = br.absolute_url(l['href'])
        fname = url.rsplit('/')[-1]
        if fname.startswith('RJFA') and fname.lower().endswith('.zip'):
            if fname.startswith('RJFAF'):
                break
            elif fname.startswith('RJFAC'):
                log.warning('rdg incremental-changes fares feed available: %s' % (fname))
            else:
                log.error('rdg unknown fares feed available: %s' % (fname))
    else:
        log.error('Fares url not found')
        sys.exit(1)
    response = br.open(url)
    if unzip:
        zz = ZipFile(BytesIO(response.content))
        feeds_path = os.path.join(os.getcwd(), 'feeds', 'fares')
        zz.extractall(feeds_path)
        log.info('Extracted all files to %s' % feeds_path)
    else:
        zip_path = os.path.join(os.getcwd(), 'feeds', fname)
        with open(zip_path, 'wb') as zf:
            zf.write(response.content)
            log.info('Downloaded to %s' % (zip_path))

if __name__ == '__main__':
    args = vars(parser.parse_args())
    if args['v']:
        logging.root.setLevel(logging.DEBUG)
    elif not args['quiet']:
        logging.root.setLevel(logging.INFO)
    formatter = ColoredFormatter("%(log_color)s%(message)s%(reset)s")
    stream = logging.StreamHandler()
    stream.setFormatter(formatter)
    logging.root.addHandler(stream)

    creds = get_rdg_credentials(args)
    if creds['username'] and creds['password']:
        download_fares_feed(creds['username'], creds['password'], args['unzip'])
    else:
        if 'username' not in creds:
            log.error("### Couldn't find a username")
        if 'password' not in creds:
            log.error("### Couldn't find a password")
        parser.print_help()
